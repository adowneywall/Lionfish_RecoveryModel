SR.range
#### USER VALUES ####
## Self-recruitment and Removal Range
SR.RANGE.HIGH   <- 1      # Self-recruitment: 1 = 100%, 0.01 = 1%
SR.RANGE.LOW    <- 0.01   # Self-recruitment
SR.INCREMENT    <- 0.1    # Self-recruitment 0.01 = 1% increments
LR.RANGE.HIGH   <- 1      # Lionfish removal (percentage)
LR.RANGE.LOW    <- 0      # Lionfish removal (percentage)
LR.INCREMENT    <- 0.1    # Lionfish removal (percentage)
START.POP       <- 1      # Starting Pop - proportion - 1 = max pop expected
## Demographic Parameters
REC.PER.IND     <- 0.818  # Recruits per individual
# See section below of 'Larvae per adult' for calculation.
JUVI.MORT       <- 0.165  # Juvenile mortality
ADULT.MORT      <- 0.052  # Adult mortality
MONTH           <- 6      # Run length of model (in months)
ADULT.FRAC      <- 0.96   # Fraction of starting population that are adults
# * Based on the empirical estimates of Belize 2014 lionfish sample
#   on the forereef.
## Calculating Recruit per Individual
# This section takes egg and larval demographic parameters and calculates
# the monthly number of recruits per individual adult lionfish.
ADULT.FEM.FRAC  <- 0.49    # Proportion of adults that are females
ADULT.FEM.MAT   <- 0.79    # Proportion of females that are mature
FE              <- 194577  # Fecundity - number of eggs per female per month
ME              <- 0.31    # Egg mortality (days)
DE              <- 3       # Egg duration (days)
ML              <- 0.35    # Larval mortality (days)
DL              <- 30      # Larval duration (days)
E               <- 2.71828 # e constant
REC.PER.IND<- ADULT.FEM.FRAC*ADULT.FEM.MAT*FE*E^-(ME*DE+ML*DL)
#### Calculated values ####
MORT.JUVI.TOT    <- 1-JUVI.MORT  # Starting fraction of juveniles alive after first month
ADULT.MORT       <- 1-ADULT.MORT # Starting fraction of adults alive after first month
# Vector with complete self-recruitment range
SR.range         <- seq(to = SR.RANGE.HIGH,from = SR.RANGE.LOW,by = SR.INCREMENT)
#Vector with complete local removal range
LR.range         <- seq(from = LR.RANGE.HIGH,to = LR.RANGE.LOW,by = -LR.INCREMENT)
#Array with all combinations of of SR and LR values
LR.SR.array      <- array(dim=c(length(SR.range),length(LR.range),2));
LR.SR.array[,,1] <- t(apply(LR.SR.array[,,1],1,function(x) {x<-LR.range}))
LR.SR.array[,,2] <- apply(LR.SR.array[,,2],2,function(x) {x<-SR.range})
## Self-recruitment and Removal Range
SR.RANGE.HIGH   <- 1      # Self-recruitment: 1 = 100%, 0.01 = 1%
SR.RANGE.LOW    <- 0.01   # Self-recruitment
SR.INCREMENT    <- 0.1    # Self-recruitment 0.01 = 1% increments
LR.RANGE.HIGH   <- 1      # Lionfish removal (percentage)
LR.RANGE.LOW    <- 0      # Lionfish removal (percentage)
LR.INCREMENT    <- 0.1    # Lionfish removal (percentage)
START.POP       <- 1      # Starting Pop - proportion - 1 = max pop expected
## Demographic Parameters
REC.PER.IND     <- 0.818  # Recruits per individual
# See section below of 'Larvae per adult' for calculation.
JUVI.MORT       <- 0.165  # Juvenile mortality
ADULT.MORT      <- 0.052  # Adult mortality
MONTH           <- 6      # Run length of model (in months)
ADULT.FRAC      <- 0.96   # Fraction of starting population that are adults
# * Based on the empirical estimates of Belize 2014 lionfish sample
#   on the forereef.
## Calculating Recruit per Individual
# This section takes egg and larval demographic parameters and calculates
# the monthly number of recruits per individual adult lionfish.
ADULT.FEM.FRAC  <- 0.49    # Proportion of adults that are females
ADULT.FEM.MAT   <- 0.79    # Proportion of females that are mature
FE              <- 194577  # Fecundity - number of eggs per female per month
ME              <- 0.31    # Egg mortality (days)
DE              <- 3       # Egg duration (days)
ML              <- 0.35    # Larval mortality (days)
DL              <- 30      # Larval duration (days)
E               <- 2.71828 # e constant
REC.PER.IND     <- ADULT.FEM.FRAC*ADULT.FEM.MAT*FE*E^-(ME*DE+ML*DL)
#### Calculated values ####
MORT.JUVI.TOT    <- 1 - JUVI.MORT  # Starting fraction of juveniles alive after first month
ADULT.MORT       <- 1 - ADULT.MORT # Starting fraction of adults alive after first month
# Vector with complete self-recruitment range
SR.range         <- seq(to = SR.RANGE.HIGH,from = SR.RANGE.LOW,by = SR.INCREMENT)
#Vector with complete local removal range
LR.range         <- seq(from = LR.RANGE.HIGH,to = LR.RANGE.LOW,by = -LR.INCREMENT)
#Array with all combinations of of SR and LR values
LR.SR.array      <- array(dim=c(length(SR.range),length(LR.range),2));
LR.SR.array[,,1] <- t(apply(LR.SR.array[,,1],1,function(x) {x<-LR.range}))
LR.SR.array[,,2] <- apply(LR.SR.array[,,2],2,function(x) {x<-SR.range})
SR.range
LR.range
LR.SR.array
LR.SR.array[,,1] <- t(apply(LR.SR.array[,,1],1,function(x) {x<-LR.range}))
LR.SR.array[,,2] <- apply(LR.SR.array[,,2],2,function(x) {x<-SR.range})
LR.SR.array
dist.recruit     <-NULL
temp.larvae      <-NULL
YEARS            <- 7          # years since lionfish arrived in Belize
BINS             <- 12         # Number of of age/life stage bins
month.steps      <- YEARS*12   # months since invasion
init.agebin      <- matrix(ncol = BINS, nrow = (month.steps))
for( i in 1:month.steps){
for(j in 1:BINS){
if (j == 1) { init.agebin[i,j] <- REC.PER.IND*1}
else {
if (j == 12 && i != 1) {
init.agebin[i,j] <- init.agebin[i-1,j]*adult.mort + init.agebin[i,j-1]*mort.juvi.tot}
else { init.agebin[i,j] <- init.agebin[i,j-1]*mort.juvi.tot}
}
}
}
for( i in 1:month.steps){
for(j in 1:BINS){
if (j == 1) { init.agebin[i,j] <- REC.PER.IND*1}
else {
if (j == 12 && i != 1) {
init.agebin[i,j] <- init.agebin[i-1,j]*adult.mort + init.agebin[i,j-1]*mort.juvi.tot}
else { init.agebin[i,j] <- init.agebin[i,j-1]*MORT.JUVI.TOT}
}
}
}
for( i in 1:month.steps){
for(j in 1:BINS){
if (j == 1) { init.agebin[i,j] <- REC.PER.IND*1}
else {
if (j == BINS && i != 1) {
init.agebin[i,j] <- init.agebin[i-1,j]*ADULT.MORT + init.agebin[i,j-1]*MORT.JUVI.TOT}
else { init.agebin[i,j] <- init.agebin[i,j-1]*MORT.JUVI.TOT}
}
}
}
YEARS            <- 7          # years since lionfish arrived in Belize
BINS             <- 12         # Number of of age/life stage bins
MONTHS.STEPS      <- YEARS*12   # months since invasion
init.agebin      <- matrix(ncol = BINS, nrow = (month.steps))
for( i in 1:MONTH.STEPS){
for(j in 1:BINS){
if (j == 1) { init.agebin[i,j] <- REC.PER.IND*1}
else {
if (j == BINS && i != 1) {
init.agebin[i,j] <- init.agebin[i-1,j]*ADULT.MORT + init.agebin[i,j-1]*MORT.JUVI.TOT}
else { init.agebin[i,j] <- init.agebin[i,j-1]*MORT.JUVI.TOT}
}
}
}
age.bin.final <- sapply(init.agebin[month.steps,],function(x) {x/sum(age.bin.final)})
YEARS            <- 7          # years since lionfish arrived in Belize
BINS             <- 12         # Number of of age/life stage bins
MONTH.STEPS      <- YEARS*12   # months since invasion
init.agebin      <- matrix(ncol = BINS, nrow = (month.steps))
for( i in 1:MONTH.STEPS){
for(j in 1:BINS){
if (j == 1) { init.agebin[i,j] <- REC.PER.IND*1}
else {
if (j == BINS && i != 1) {
init.agebin[i,j] <- init.agebin[i-1,j]*ADULT.MORT + init.agebin[i,j-1]*MORT.JUVI.TOT}
else { init.agebin[i,j] <- init.agebin[i,j-1]*MORT.JUVI.TOT}
}
}
}
age.bin.final <- sapply(init.agebin[MONTH.STEPS,],function(x) {x/sum(age.bin.final)})
age.bin.final <- sapply(init.agebin[MONTH.STEPS,],function(x) {x/sum(age.bin.final)})
age.bin.final <- sapply(init.agebin[MONTH.STEPS,],function(x) {x/sum(init.agebin)})
age.bin.final
sum(age.bin.final)
init.agebin
age.bin.final <- sapply(init.agebin[MONTH.STEPS,],function(x) {x/sum(init.agebin[84,])})
sum(age.bin.final)
age.bin.final
MONTH.STEPS
age.bin.final <- sapply(init.agebin[MONTH.STEPS,],function(x) {x/sum(init.agebin[MONTH.STEPS,])})
YEARS            <- 7          # years since lionfish arrived in Belize
BINS             <- 12         # Number of of age/life stage bins
MONTH.STEPS      <- YEARS*12   # months since invasion
init.agebin      <- matrix(ncol = BINS, nrow = (month.steps))
for( i in 1:MONTH.STEPS){
for(j in 1:BINS){
if (j == 1) { init.agebin[i,j] <- REC.PER.IND*1}
else {
if (j == BINS && i != 1) {
init.agebin[i,j] <- init.agebin[i-1,j]*ADULT.MORT + init.agebin[i,j-1]*MORT.JUVI.TOT}
else { init.agebin[i,j] <- init.agebin[i,j-1]*MORT.JUVI.TOT}
}
}
}
age.bin.final <- sapply(init.agebin[MONTH.STEPS,],function(x) {x/sum(init.agebin[MONTH.STEPS,])})
source('C:/Users/Alan/Desktop/Final_recovery_modelscript.R', echo=TRUE)
library(ggplot2)
install.packages("ggplot2")
init.agebin
#### USER VALUES ####
## Self-recruitment and Removal Range
SR.RANGE.HIGH   <- 1      # Self-recruitment: 1 = 100%, 0.01 = 1%
SR.RANGE.LOW    <- 0.01   # Self-recruitment
SR.INCREMENT    <- 0.1    # Self-recruitment 0.01 = 1% increments
LR.RANGE.HIGH   <- 1      # Lionfish removal (percentage)
LR.RANGE.LOW    <- 0      # Lionfish removal (percentage)
LR.INCREMENT    <- 0.1    # Lionfish removal (percentage)
START.POP       <- 1      # Starting Pop - proportion - 1 = max pop expected
## Demographic Parameters
REC.PER.IND     <- 0.818  # Recruits per individual
# See section below of 'Larvae per adult' for calculation.
JUVI.MORT       <- 0.165  # Juvenile mortality
ADULT.MORT      <- 0.052  # Adult mortality
MONTH           <- 6      # Run length of model (in months)
ADULT.FRAC      <- 0.96   # Fraction of starting population that are adults
# * Based on the empirical estimates of Belize 2014 lionfish sample
#   on the forereef.
## Calculating Recruit per Individual
# This section takes egg and larval demographic parameters and calculates
# the monthly number of recruits per individual adult lionfish.
ADULT.FEM.FRAC  <- 0.49    # Proportion of adults that are females
ADULT.FEM.MAT   <- 0.79    # Proportion of females that are mature
FE              <- 194577  # Fecundity - number of eggs per female per month
ME              <- 0.31    # Egg mortality (days)
DE              <- 3       # Egg duration (days)
ML              <- 0.35    # Larval mortality (days)
DL              <- 30      # Larval duration (days)
E               <- 2.71828 # e constant
REC.PER.IND     <- ADULT.FEM.FRAC*ADULT.FEM.MAT*FE*E^-(ME*DE+ML*DL)
#### Calculated values ####
MORT.JUVI.TOT    <- 1 - JUVI.MORT  # Starting fraction of juveniles alive after first month
ADULT.MORT       <- 1 - ADULT.MORT # Starting fraction of adults alive after first month
# Vector with complete self-recruitment range
SR.range         <- seq(to = SR.RANGE.HIGH,from = SR.RANGE.LOW,by = SR.INCREMENT)
#Vector with complete local removal range
LR.range         <- seq(from = LR.RANGE.HIGH,to = LR.RANGE.LOW,by = -LR.INCREMENT)
#Array with all combinations of of SR and LR values
LR.SR.array      <- array(dim=c(length(SR.range),length(LR.range),2));
LR.SR.array[,,1] <- t(apply(LR.SR.array[,,1],1,function(x) {x<-LR.range}))
LR.SR.array[,,2] <- apply(LR.SR.array[,,2],2,function(x) {x<-SR.range})
#### Model Initializations ####
dist.recruit     <-NULL
temp.larvae      <-NULL
## Initialize age-class bins
# Written to initialize the bins based on the time (in years)
# since the arrival of the invasion.
YEARS            <- 7          # years since lionfish arrived in Belize
BINS             <- 12         # Number of of age/life stage bins
MONTH.STEPS      <- YEARS*12   # months since invasion
init.agebin      <- matrix(ncol = BINS, nrow = (month.steps))
DIST.RECRUIT     <-NULL
TEMP.LARVAE      <-NULL
init.agebin
init.agebin      <- matrix(ncol = BINS, nrow = (MONTH.STEPS))
init.agebin
init.agebin      <- matrix(ncol = BINS, nrow = (MONTH.STEPS))
for( i in 1:MONTH.STEPS){
for(j in 1:BINS){
if (j == 1) { init.agebin[i,j] <- REC.PER.IND*1}
else {
if (j == BINS && i != 1) {
init.agebin[i,j] <- init.agebin[i-1,j]*ADULT.MORT + init.agebin[i,j-1]*MORT.JUVI.TOT}
else { init.agebin[i,j] <- init.agebin[i,j-1]*MORT.JUVI.TOT}
}
}
}
age.bin.final <- sapply(init.agebin[MONTH.STEPS,],function(x) {x/sum(init.agebin[MONTH.STEPS,])})
model.output <- array(dim=c(length(SR.range),length(LR.range),MONTH,length(age.bin.final)))
(plot(init.agebin[,12]))
(plot(init.agebin[,11]))
init.agebin
